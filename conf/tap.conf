# A description of the simulation
description = "Cyclotron test: Electron in a fixed magnetic field"

# The species of particles
species = (
	{
		name = "electron"
		particles = 2000000
		#particles = 2000000
		#particles = 200
		charge = -1.0
		mass = 1.0
		drift_velocity = [0.0, 10.0]
		#drift_velocity = [0.1, -2.0]
		#init_method = "harmonic two electrons"
		init_method = "random position"
		#init_method = "position delta"
		position_delta = [2.0, 2.0]
		position_init = [0.0, 0.0]
		#position_init = [2.0, 3.0]

		# Not used yet
		thermal_velocity = 0.0

		# Set to 0 in non-magnetized plasma
		cyclotron_frequency = 0.0
		charge_mass_ratio = 0.0
		plasma_frequency = 0.0
	},
)

field = {
	magnetic = [0.0, 0.0, -1.0]
}

# Information of the space grid
grid = {
	#points = [4, 4]
	#points = [128, 128]
	#points = [256, 256]
	#points = [512, 512]

	# 2^12 points each side
	#points = [1024, 1024]
	#points = [2048, 2048]
	#points = [8192, 8192]
	#points = [16384, 16384]
	points = [20224, 20224]
	#points = [32768, 32768]
	#points = [1024, 1024]
}

simulation = {
	# The number of dimensions used in the simulation
	dimensions = 2

	solver = "MFT_TAP"

	# Number of threads used in FFTW for the MFT solver. If set to zero, the
	# threads library is not used. Set to -1 to compute the number of
	# threads equal to the available CPUs at run time. Otherwise set the
	# manual number of threads.
	enable_fftw_threads = 0;

	# Number of plasma chunks in the X direction per MPI process
	#plasma_chunks = 2048;
	plasma_chunks = 128;

	# Used to position the particles when using rand()
	random_seed = 138

	# Number of simulation iterations
	#cycles = 5000
	cycles = 100

	# Time discretization
	time_step = 5.0e-4

	# The size of the simulation in SI units.
	space_length = [100.0, 100.0]

	# The sampling period in iterations of different events. Use 0 to disable.
	sampling_period = {
		energy = 0
		field = 1
		particle = 1
	}

	# Sampling mode: The simulation continues until the standard error of
	# the mean (SEM) decreases below this value, or until the number of
	# cycles is reached. Otherwise set the value to 0 if no sampling is
	# needed.
	#
	# See: https://quant.stackexchange.com/questions/21764/stopping-monte-carlo-simulation-once-certain-convergence-level-is-reached
	stop_SEM = 0.01

	# Show the simulation in real time
	realtime_plot = 1
}


plot = {
	size = [800, 800]
	# Number of particles plotted (high CPU demand)
	track_particles = 0

	# Slowdown plot to show high speed simulation
	max_fps = 30.0

	# Top velocity in the plot
	max_velocity = 6.0

	# Track particle 0 speed u, and count the number of velocity switches
	# from u <= 0 to u > 0 (loops) which are printed. If max_loops = 0,
	# ignore.
	#max_loops = 10

	# Set the energy plot trigger using the level of the kinetic energy. The
	# trigger value is specified as a fraction of the total energy.
	trigger_factor = 0.2
}

# Physics constants in SI units
constants = {
	light_speed = 2.99792458e+8
	vacuum_permittivity = 1.0
	#vacuum_permittivity = 8.85e-12

	# Not used yet
	boltzmann_constant = 0.0
}
